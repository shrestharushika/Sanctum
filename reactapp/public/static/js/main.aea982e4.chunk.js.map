{"version":3,"sources":["Static/FlashCards.js","Static/CardList.js","Static/Navbar.js","Static/Text-To-Speech-box.js","Static/TTS.js","Static/App.js","index.js"],"names":["rate","pitch","Cards","id","category","description","handleSpeak","text","msg","SpeechSynthesisUtterance","lang","volume","onerror","e","console","log","parseFloat","speechSynthesis","speak","FlashCards","cardData","className","map","curElem","value","onClick","Navbar","filterItem","cardList","TextToSpeechbox","useState","setText","type","placeholder","onChange","target","localStorageData","lists","localStorage","getItem","JSON","parse","cards","List","Set","TTS","setCardData","newCategory","setCategory","newDescription","setDescription","setRate","setPitch","isOpen","setIsOpen","formOpen","setFormopen","Form","ToggleSidebar","newData","Date","getTime","push","setItem","stringify","AddCards","for","min","max","step","name","pitchValue","updatedList","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aea982e4.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"./style.css\";\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Alert } from \"react-bootstrap\";\r\nimport \"./CSS/button.css\";\r\n\r\nvar rate;\r\nvar pitch;\r\nvar pause;\r\n\r\nexport const handleSpeak=(text)=>{  //text to speech conversion \r\n\r\n    var msg= new SpeechSynthesisUtterance();\r\n    msg.lang='en-US';\r\n   \r\n    msg.volume = 2;\r\n    msg.text=text;\r\n   \r\n\r\n    // console.log(text+\" \"+rate.value+\" \"+pitch.value);\r\n    \r\n    // speakerror\r\n    msg.onerror=e => {\r\n        console.log(\"Something went wrong\");\r\n        // Alert(\"\")\r\n    }\r\n\r\n   \r\n    //setting pitch and rate\r\n       if(pitch!=null){\r\n        console.log(\"pitch value=\"+ pitch);\r\n        msg.pitch=pitch;\r\n       }\r\n       else{\r\n           msg.pitch=1;\r\n       }\r\n    \r\n       if(rate!=null){\r\n        console.log(\"rate value=\"+ rate);\r\n        msg.rate=parseFloat(rate);\r\n    }\r\n        else{\r\n            msg.rate=1;\r\n        }\r\n        \r\n       \r\n        speechSynthesis.speak(msg);\r\n    \r\n     \r\n\r\n}\r\n\r\n\r\nexport const RateChange=(rateValue)=>{\r\n    \r\n            rate=rateValue;\r\n            console.log(\"changed value=\"+ rate);\r\n}  \r\n\r\nexport const PitchChange=(pitchValue)=>{\r\n    console.log(\"changed pvalue=\"+ pitchValue);\r\n    pitch=pitchValue;\r\n}  \r\n\r\nconst FlashCards =({cardData})=>{\r\n     \r\n    console.log(cardData);\r\n    return (\r\n        // ðŸ—£\r\n        \r\n\r\n                <section className=\"main-card--cointainer\">\r\n                   \r\n                   \r\n                    <div className=\"card-container\">\r\n                         \r\n                        {/* <div className=\"Add\">\r\n                            <div><label className=\"AddCard\" >Add Cards</label></div>\r\n                        </div> */}\r\n\r\n                        {cardData.map((curElem)=> {\r\n                                // const {value}={description}\r\n                            \r\n                                const {id,description} = curElem;\r\n                               \r\n                                return(\r\n                                    <>\r\n                                        \r\n                                        <div className=\"card\" key={id}>\r\n                                            {/* call handlespeak() speak({text:description}) */}\r\n                                            <button value=\"I\"  onClick={()=> handleSpeak(description)}>{description}</button>\r\n                                            \r\n                                        </div>\r\n                                       \r\n                                        {/* <div>Hi {value}</div> */}\r\n                                    </>\r\n                                );\r\n\r\n                            })}\r\n                        </div>\r\n                       \r\n                </section>    \r\n        \r\n         \r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default  FlashCards;","const Cards=[\r\n    {\r\n        id:1,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"I\"\r\n    },\r\n\r\n    {\r\n        id:2,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"Like\"\r\n    },\r\n\r\n    {\r\n        id:3,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"Favourite\"\r\n    },\r\n\r\n    {\r\n        id:4,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"color\"\r\n    },\r\n\r\n    {\r\n        id:5,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"sports\"\r\n    },\r\n\r\n    {\r\n        id:6,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"love\"\r\n    },\r\n    {\r\n        id:7,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"is\"\r\n    },\r\n\r\n    {\r\n        id:8,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"on\",\r\n    },\r\n\r\n    {\r\n        id:9,\r\n        // image:\r\n        category:\"Food\",\r\n        description:\"Ice Cream\",\r\n    },\r\n\r\n    {\r\n        id:10,\r\n        // image:\r\n        category:\"Food\",\r\n        description:\"Choclates\",\r\n    },\r\n\r\n    {\r\n        id:11,\r\n        // image:\r\n        category:\"Food\",\r\n        description:\"Pizza\",\r\n    },\r\n\r\n    {\r\n        id:12,\r\n        // image:\r\n        category:\"Food\",\r\n        description:\"Burger\",\r\n    },\r\n\r\n    {\r\n        id:13,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"WOW\",\r\n    },\r\n\r\n    {\r\n        id:14,\r\n        // image:\r\n        category:\"Food\",\r\n        description:\"Chips\",\r\n    },\r\n\r\n    {\r\n        id:15,\r\n        // image:\r\n        category:\"Home\",\r\n        description:\"Hate\",\r\n    },\r\n   \r\n\r\n]\r\nexport default Cards;","import React,{useState} from \"react\";\r\nimport \"./style.css\";\r\nimport {handleSpeak,RateChange,PitchChange} from \"./FlashCards\";\r\nimport \"./CSS/button.css\";\r\n\r\n\r\n\r\n\r\nconst Navbar = ({filterItem,cardList}) =>{\r\n \r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar\">\r\n                \r\n                <div className=\"btn-group\">\r\n                    {cardList.map((curElem) =>{ \r\n                        return (\r\n                        \r\n                            \r\n                                <button className=\"button-btn\" onClick={() => filterItem(curElem)}>\r\n                                    {curElem}\r\n                                </button>\r\n                                \r\n                        \r\n                        );\r\n                    })}\r\n                </div>\r\n            </nav>\r\n        </div>\r\n\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default Navbar;","import {handleSpeak} from \"./FlashCards\";\r\nimport \"./style.css\";\r\nimport React,{useState,useEffect} from \"react\";\r\nimport \"./CSS/button.css\";\r\nimport \"./CSS/fa_icons.css\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst TextToSpeechbox=()=>{\r\n    \r\n    const [text,setText]=useState(\"You can write also\");\r\n    \r\n\r\n    \r\n   \r\n\r\n    const handleTextChange=(e)=>{\r\n        console.log(e.target.value);\r\n        setText(e.target.value);\r\n    }\r\n\r\n   \r\n   \r\n\r\n    \r\n   \r\n    \r\n    \r\n    return(\r\n           <>\r\n           \r\n                <div className=\"features\">\r\n                          \r\n                       <input  className=\"text\" type=\"text\" placeholder={text} onChange={handleTextChange} id=\"speech-msg\"/>\r\n                       {/* <i className=\"fas fa-microphone\"></i> ðŸ—£*/}\r\n                       <button className=\"microphone\" onClick={()=>handleSpeak(text)}>ðŸ—£</button> \r\n                       {/* <button  className=\"speak\" onClick={()=>handleSpeak(text)}></button> */}\r\n               </div>\r\n           </>   \r\n    );\r\n};\r\n\r\nexport default TextToSpeechbox;\r\n","import React , { useState,useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Cards from \"./CardList\";\r\nimport FlashCards from \"./FlashCards\";\r\nimport Navbar from \"./Navbar\";\r\nimport TextToSpeechbox from\"./Text-To-Speech-box\";\r\nimport {handleSpeak,RateChange,PitchChange} from \"./FlashCards\";\r\nimport \"./CSS/button.css\";\r\nimport \"./CSS/fa_icons.css\";\r\n\r\n// get the data from local Storage\r\nconst localStorageData=()=>{\r\n    const lists=localStorage.getItem(\"MySpeakingCards\");\r\n    // console.log(\"lsd\",JSON.parse(lists));\r\n    \r\n    if(lists){\r\n        return JSON.parse(lists);\r\n    }else{\r\n        return Cards;\r\n    }\r\n   \r\n};\r\nconst cards=localStorageData();\r\n\r\nconst List=[\r\n    \r\n    ...new Set(\r\n       cards.map((curElem)=>{\r\n           return curElem.category;\r\n       }) \r\n    ),\r\n   \r\n];\r\n\r\nconst TTS=()=>{\r\n    const [cardData,setCardData]=useState(localStorageData()); // to hold the initial data\r\n    const [cardList,setDataList]=useState(List);\r\n    const [newCategory,setCategory]=useState(\"\");\r\n    const [newDescription,setDescription]=useState(\"\");\r\n    const [rate,setRate]=useState(1);// set Rate\r\n    const [pitch,setPitch]=useState(1);//pitch\r\n    const [isOpen,setIsOpen]=useState(false);\r\n    const [formOpen,setFormopen]=useState(false);\r\n  //to set rate & pitch value\r\n    const handleRateChange=(e)=>{\r\n        // console.log(e.target.value);\r\n        setRate(e.target.value);\r\n        RateChange(rate)\r\n    }  \r\n\r\n    const handlePitchChange=(e)=>{\r\n        setPitch(e.target.value);\r\n        PitchChange(pitch);\r\n    }\r\n\r\n    const Form=()=>{\r\n        formOpen===true?setFormopen(false):setFormopen(true);\r\n    }\r\n\r\n    const ToggleSidebar=()=>{\r\n        isOpen===true ? setIsOpen(false):setIsOpen(true);\r\n    }\r\n    // 1643012580465\r\n    // To dynamically add new cards\r\n    const AddCards=()=>{\r\n        // console.log(newCategory,newDescription);\r\n        // console.log(Cards);\r\n        const newData={\r\n            id:new Date().getTime(),\r\n            category:newCategory,\r\n            description:newDescription\r\n        };\r\n        if(newData){\r\n            setCardData([... cardData,newData])\r\n            Cards.push(newData);\r\n            localStorage.setItem(\"MySpeakingCards\",JSON.stringify(Cards));\r\n       }\r\n    }\r\n\r\n  \r\n    const filterItem=(category)=>{\r\n        const updatedList=cards.filter((curElem)=>{\r\n            return curElem.category===category;\r\n        });\r\n\r\n        setCardData(updatedList);\r\n    };\r\n    \r\n\r\n    const handleAddCategory=(e)=>{\r\n        setCategory(e.target.value);\r\n    }\r\n\r\n    const handleAddDescription=(e)=>{\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n  \r\n    return(\r\n            <>\r\n                \r\n                                 \r\n                 <div className={`form ${formOpen===true ? 'active':''}`}>\r\n                        \r\n                            <div className=\"btn btn-primary\" ><i className=\"fa fa-times\" aria-hidden=\"true\" onClick={Form}></i></div>\r\n                        <center>\r\n                            <label><b>Category:</b></label><br></br><br></br>\r\n                            <input type=\"text\"  className=\"textbox\" onChange={handleAddCategory}></input><br></br>\r\n                            <label><b>Description</b></label><br></br><br></br>\r\n                            <input type=\"text\"  className=\"textbox\" onChange={handleAddDescription}></input><br></br>\r\n                            <button type=\"submit\" onClick={()=>AddCards()}>Add</button>\r\n                        </center>\r\n                 </div>\r\n                 <div className={`form-overlay ${isOpen === true ? 'active':'' }`} onClick={Form}></div>\r\n                \r\n                <div className=\"navbar2\">\r\n                  \r\n                    \r\n                    {/* <div className=\"head\"> */}\r\n                        <div className=\"nav-btn1\" onClick={ToggleSidebar}>\r\n                            <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n                        </div>\r\n                         \r\n                            \r\n                        <div className=\"nav-btn2\">\r\n                            <i className=\"fa fa-plus\" aria-hidden=\"true\" onClick={Form}></i>\r\n                        </div>\r\n                        \r\n                    {/* </div> */}\r\n                </div>\r\n\r\n                <div className = {`sidebar ${isOpen == true ? 'active':''}`}>\r\n                            <div className=\"sd-header\">\r\n                                <h3>Features</h3>\r\n                                <div className=\"btn btn-primary\"  onClick={ToggleSidebar}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div>\r\n                            </div>\r\n                            <div className=\"sd-body\">\r\n                                <ul>\r\n                                    <div className=\"ratevalue\">\r\n                                        <label for=\"Rate\"><b>Rate</b></label>\r\n                                        <input type=\"range\" id=\"rate\" min=\"0.1\" max=\"10\" step=\"0.1\"  name=\"rate\" value={rate} onChange={handleRateChange}></input>\r\n                                    </div>\r\n\r\n                                    <div className=\"pitchvalue\">\r\n                                        <label for=\"Pitch\"><b>Pitch</b></label>\r\n                                        <input type=\"range\" id=\"pitch\" min=\"0\" max=\"2\" step=\"0.1\"  name=\"pitch\" value={pitch} onChange={handlePitchChange}></input>\r\n                                    </div>\r\n\r\n                                    \r\n                                </ul>\r\n                            </div>\r\n                </div>\r\n                <div className={`sidebar-overlay ${isOpen === true ? 'active':'' }`} onClick={ToggleSidebar}></div>\r\n                <TextToSpeechbox/>\r\n                <Navbar filterItem={filterItem} cardList={cardList}/>\r\n                <FlashCards cardData={cardData} />\r\n              {/* </div> */}\r\n            </>\r\n    );\r\n};\r\n\r\nexport default TTS","// import react,{useState,useEffect} from 'react'\n// import './src/App.css';\nimport \"./style.css\";\nimport TTS from \"./TTS\";\n\nconst App=()=>{\n  \n  return  <div className=\"b-img\"><TTS /> </div>;\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import \"./style.css\";\nimport App from './Static/App.js';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n  \n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n  // document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}